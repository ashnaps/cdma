set stop 100;
set type cdma;
set minth 0;
set maxth 30;
set window 30;
set adaptive 1;
set web 2;

set opt(wrap) 100;
set opt(srcTrace) is;
set opt(dstTrace) bs2;

set bwDl(cdma) 384000
set bwUl(cdma) 64000
set propDl(cdma) .150
set propUl(cdma) .150

set ns [new Simulator]
set nf [open lab3.nam w]
$ns namtrace-all $nf
set tf [open lab3.tr w]
$ns trace-all $tf

set nodes(is) [$ns node]
set nodes(bs1) [$ns node]
set nodes(ms) [$ns node]
set nodes(bs2) [$ns node]
set nodes(lp) [$ns node]

proc cell_topo { } {
global ns nodes
$ns duplex-link $nodes(lp) $nodes(bs1) 3Mbps 10nodes(ms) Droptail
$ns duplex-link $nodes(bs1) $nodes(ms) 1 1 RED
$ns duplex-link $nodes(ms) $nodes(bs2) 1 1 RED
$ns duplex-link $nodes(bs2) $nodes(is) 3Mbps 50nodes(ms) DropTail
puts "CDMA cell topology"
}

proc set_link_para {t} {
global ns nodes bwUl bwDl propUl propDl buf
$ns bandwidth $nodes(bs1) $nodes(ms) $bwDl($t) duplex
$ns bandwidth $nodes(bs2) $nodes(ms) $bwDl($t) duplex
$ns delay $nodes(bs1) $nodes(ms) $propDl($t) duplex
$ns delay $nodes(bs2) $nodes(ms) $propDl($t) duplex
$ns queue-limit $nodes(bs1) $nodes(ms) 10
$ns queue-limit $nodes(bs2) $nodes(ms) 10
}

Queue/RED set adaptive_ $adaptive
Queue/RED set thresh_ $minth
Queue/RED set maxthresh_ $maxth
Agent/TCP set window_ $window

switch $type {
 cdma {cell_topo}
}
set_link_para $type

set tcp1 [new Agent/TCP]
$ns attach-agent $nodes(is) $tcp1
set ftp1 [new Application/FTP]
$ftp1 attach-agent $tcp1
set sink1 [new Agent/TCPSink]
$ns attach-agent $nodes(lp) $sink1
$ns connect $tcp1 $sink1
$ns at 0.8 "[set ftp1] start"

proc stop {} {
	global nodes opt nf
	set wrap $opt(wrap)
	set sid [$nodes($opt(srcTrace)) id]
	set did [$nodes($opt(dstTrace)) id]
	set a "out.tr"
	set GETRC "/home/bnmit/ns-allinone-2.35/ns-2.35/bin/getrc"
	set RAW2XG "/home/bnmit/ns-allinone-2.35/ns-2.35/bin/raw2xg"
	exec $GETRC -s $sid -d $did -f 0 out.tr | \
	$RAW2XG -s 0.01 -m $wrap -r > plot.xgr
	exec $GETRC -s $did -d $sid -f 0 out.tr | \
	$RAW2XG -a -s 0.01 -m $wrap >> plot.xgr &
	exec nam lab3.nam &
	exit 0	
}
$ns at $stop "stop"
$ns run







